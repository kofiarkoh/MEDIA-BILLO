{"version":3,"sources":["variables/charts.js","assets/img/billologo.png","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/billo.png","assets/img/theme/profile-cover.jpg","assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","assets/img/brand/argon-react-white.png","assets/img/brand/argon-react.png","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","api calls/addticketevent.js","components/Loaders/Loading.js","components/Modals/EditSingleTicketEventModal.js","api calls/homestats.js","views/Index.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Maps.js","views/examples/Register.js","views/examples/Login.js","views/examples/Tables.js","components/Headers/PageHeader.js","views/examples/Icons.js","api calls/getevents.js","api calls/addticketcategory.js","components/Modals/EditTicketCategoryModal.js","api calls/verifyticket.js","routes.js","views/AddTicketEvent.js","views/AddTicketCategory.js","views/TicketSummary.js","views/VerifyTicket.js","views/TicketTransactions.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness","AdminNavbar","Navbar","className","expand","id","Container","fluid","to","props","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","React","Component","Footer","Row","Col","xl","Date","getFullYear","href","rel","NavItem","NavLink","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","path","tag","NavLinkRRD","onClick","activeClassName","icon","name","activeRoute","bind","routeName","location","pathname","navbarBrandProps","logo","innerLink","Link","outterLink","target","type","NavbarBrand","imgAlt","Collapse","isOpen","xs","imgSrc","defaultProps","Header","lg","Card","CardBody","CardTitle","total","active","sales","createTicketEvent","multiticket","price","formdata","FormData","append","fetch","method","body","redirect","then","response","json","result","console","log","catch","error","resp_code","message","updateTicketEvent","a","requestOptions","Loading","loading","EditSingleTicketEventModal","useState","setName","setPrice","multiTicket","setMultiTicket","isloading","setLoading","submitData","event_name","event_price","event_multi_ticket","multi_ticket","alert","event_id","res","close","refreshdata","Modal","open","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","onChange","e","ModalFooter","Button","disabled","getHomeStatistics","updateTicketSellingStatus","eventid","status","Index","setModal","v","modalopen","fetchStatistics","eventstats","stats","active_events","num_events","swal","toggleNavs","preventDefault","activeNav","chartExample1Data","changeTicketStatus","itemToEdit","window","CardHeader","Table","scope","multi_tickers","tickets_sold","amount_earned","UserHeader","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","PageHeader","getevents","getTicketEvents","createTicketCategory","categories","myHeaders","Headers","raw","JSON","stringify","headers","updateTicketCategory","catId","soldout","EditTicketCategoryModal","isSoldOut","setSoldOut","cat_name","category_name","cat_price","sold_out","is_sold_out","category_id","parseFloat","verifyTicket","fetchTicketEvents","component","eventlist","setEventList","selectedEvent","setSelectedEvent","mutliTicket","setMultiTiket","fetchEvents","useEffect","role","eventList","setCategories","removeFromList","filter","InputGroup","toUpperCase","placeholder","InputGroupAddon","addonType","InputGroupText","name_t","trim","colonIndex","colonCount","match","slice","concat","addNameWithPrice","events","setEvents","selectedCategory","setSelectedCategory","fetchData","event","category","toFixed","ticketid","setTicketId","transactions","setTransactions","handleEventChange","ticket_id","trans_date","payment_status","Badge","phonenumber","Admin","getRoutes","getBrandText","document","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","AdminFooter","UncontrolledCollapse","toggler","Login","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2f66476d.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/billologo.9fbe60e3.png\";","module.exports = __webpack_public_path__ + \"static/media/github.4ffd4fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","module.exports = __webpack_public_path__ + \"static/media/billo.aeab6bf6.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-cover.e2582654.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.23007132.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-2-800x800.dcfcf3b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-3-800x800.497bb359.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Container,\n  DropdownToggle,\n  Media,\n  Nav,\n  Navbar,\n  UncontrolledDropdown,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/billo.png\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                       Media Billo GH\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © {new Date().getFullYear()}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"#\"\n                rel=\"noopener noreferrer\"\n                \n              >\n               Media Billo\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  rel=\"noopener noreferrer\"\n                  \n                >\n                  Powered by MickySoft Technologies\n                </NavLink>\n              </NavItem>\n\n             \n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={require(\"assets/img/billologo.png\")}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n          {/*   <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n            {/* <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n         \n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n          \n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Total Events\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                           {this.props.total}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      \n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Active Events\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                           {this.props.active}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n               \n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\nSales\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                          GHC {this.props.sales}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      \n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","const createTicketEvent = (name, multiticket, price) => {\n  var formdata = new FormData();\n  formdata.append(\"name\", name);\n  formdata.append(\"multi\", multiticket);\n  formdata.append(\"price\", price);\n\n  var requestOptions = {\n    method: \"POST\",\n    body: formdata,\n    redirect: \"follow\",\n  };\n\n  return fetch(\n    \"http://admin.mediabillo.net/tdb/dashboardbackend/api/createEvent.php\",\n    requestOptions\n  )\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      return result;\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });\n};\nconst updateTicketEvent = async (id,name,price,multiticket) => {\n  var formdata = new FormData();\n  formdata.append(\"id\", id);\n  formdata.append(\"new_name\", name);\n  formdata.append(\"new_price\", price);\n  formdata.append(\"multi_ticket\", multiticket);\n\n  var requestOptions = {\n    method: \"POST\",\n    body: formdata,\n    redirect: \"follow\",\n  };\n\n return fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/editsingleEvent.php\", requestOptions)\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      return result;\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });\n};\nexport { createTicketEvent,updateTicketEvent };\n","import React, { Component } from \"react\"\n\nimport \"./loading.css\"\nclass Loading extends Component {\n  render() {\n    return (\n      \n        <div className={`loading-content fade-in`}>\n         \n\n            {\n                this.props.loading && <div className=\"loading-main\">\n                <div className=\"loading\">\n                  <div className=\"dot\"></div>\n                  <div className=\"dot\"></div>\n                  <div className=\"dot\"></div>\n                </div>\n              </div>\n            }\n          \n        </div>\n      \n    )\n  }\n}\n\nexport default Loading\n","import React,{useState} from 'react'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Input, Label } from 'reactstrap'\nimport { updateTicketEvent } from '../../api calls/addticketevent'\nimport Loading from '../Loaders/Loading'\n\nexport default function EditSingleTicketEventModal(props) {\n    const [name,setName] = useState('')\n    const [price,setPrice] = useState('')\n    const [multiTicket,setMultiTicket] = useState('')\n    const [isloading,setLoading] = useState(false)\n    const submitData = async()=>{\n        let event_name = name === '' ? props.item.event_name : name\n        let event_price = price === '' ? props.item.price : price\n        let event_multi_ticket = multiTicket === '' ? props.item.multi_ticket : multiTicket\n        if(event_price <= 0){\n            alert('please enter a valid price');\n            return\n        }\n        setLoading(true)\n        var res = await updateTicketEvent(props.item.event_id,event_name,event_price,event_multi_ticket)\n\n        if(res.resp_code === 200) {\n            console.log(res.message)\n            props.close(false)\n            props.refreshdata()\n        }else{\n            alert(res.message)\n        }\n       \n        setLoading(false)\n       // console.log(cat_name,cat_price,sold_out)\n    }\n    return (\n       <Modal isOpen={props.open}>\n           <ModalHeader>Edit \n           <hr/>\n            <Loading loading={isloading}/>\n           </ModalHeader>\n           <ModalBody>\n              <Form>\n                  <FormGroup>\n                      <Label for='name'>Name</Label>\n                      <Input onChange={(e)=>setName(e.target.value)} value={name === '' ? props.item.event_name : name} type='text' name='name'/>\n\n                  </FormGroup>\n                  <FormGroup>\n                      <Label>Price</Label>\n                      <Input value={ price === '' ? props.item.price : price} onChange={(e)=>setPrice(e.target.value)} type='number'/>\n                      \n                  </FormGroup>\n                  <FormGroup>\n                      <Label>Will this event have multiple ticket categories?</Label>\n                      <Input value={props.item.multi_ticket} onChange={(e)=>setMultiTicket(e.target.value)} type='select'>\n                          <option value='true'>Yes</option>\n                          <option value='false'>No</option>\n                      </Input>\n                  </FormGroup>\n                 \n              </Form>\n           </ModalBody>\n           <ModalFooter>\n               <Button onClick={()=>props.close(false)}>Close</Button>\n               <Button disabled={isloading} onClick={()=>submitData()}>Save</Button>\n           </ModalFooter>\n       </Modal>\n    )\n}\n","const getHomeStatistics = async () => {\n  var requestOptions = {\n    method: \"GET\",\n    redirect: \"follow\",\n  };\n\n  return fetch(\n    \"http://admin.mediabillo.net/tdb/dashboardbackend/api/homestatistics.php\",\n    requestOptions\n  )\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      return result;\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });\n};\nconst fetchCategoryStats = ()=>{\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      \n  return    fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/getTicketCategoriesSummary.php\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result) \n            return result\n        })\n        .catch((error) => {\n            console.log(\"error\", error);\n            return { resp_code: 500, message: error };\n          });\n}\n\nconst updateTicketSellingStatus = (eventid,status )=>{\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  \nreturn  fetch(`http://admin.mediabillo.net/tdb/dashboardbackend/api/ticketsellingstatus.php?id=${eventid}&status=${status}`, requestOptions)\n    .then(response => response.json())\n    .then(result => result)\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });}\nexport { getHomeStatistics ,fetchCategoryStats,updateTicketSellingStatus};\n","\nimport Chart from \"chart.js\";\nimport Header from \"components/Headers/Header.js\";\nimport React from \"react\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  Col,\n  Container,\n  Row,\n  Table,\n  Button,\n} from \"reactstrap\";\n// core components\nimport { chartOptions, parseOptions } from \"variables/charts.js\";\nimport EditSingleTicketEventModal from \"../components/Modals/EditSingleTicketEventModal\";\nimport {getHomeStatistics, updateTicketSellingStatus} from '../api calls/homestats'\nimport Loading from \"../components/Loaders/Loading\";\nimport swal from 'sweetalert';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n      modalopen: false,\n      eventstats: [],\n      active_events : null,\n      sales:null,\n      num_events:null,\n      itemToEdit: {},\n      isloading:false\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  setModal = (v) => {\n    this.setState({ modalopen: v });\n  };\n  fetchStatistics = async()=>{\n    this.setState({isloading:true})\n    var res = await getHomeStatistics()\n    if(res.resp_code === 200){\n        this.setState({eventstats:res.message.stats,\n        active_events:res.message.active_events,\n        num_events:res.message.num_events,\n        sales:res.message.sales\n        })\n    }else{\n     \n      swal(res.message,'','error')\n    }\n    this.setState({isloading:false})\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\",\n    });\n  };\n  changeTicketStatus = async (id,status)=>{\n    this.setState({isloading:true})\n    var res = await updateTicketSellingStatus(id,status)\n    if (res.resp_code === 200){\n      swal(res.message,'','success')\n      this.fetchStatistics()\n    }\n    else{\n      swal(res.message,'','error')\n    }\n    this.setState({isloading:false})\n  }\n  componentDidMount(){\n    this.fetchStatistics()\n  }\n  render() {\n    const {sales,eventstats,active_events,num_events} = this.state\n    return (\n      <>\n        <Header sales={sales===null ? '' : sales} active={active_events === null ? 'null' : active_events} total={num_events === null ? 'null' : num_events} />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\">\n             \n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                <Loading loading={this.state.isloading}/>\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Stats</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      {/* <th scope=\"col\">ID</th> */}\n                      <th scope=\"col\">Event Name</th>\n                      <th scope=\"col\">Price Per Ticket</th>\n                      <th scope=\"col\">Tickets Sold</th>\n                      <th scope=\"col\">Amount Earned</th>\n                      <th scope=\"col\">Acton</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                    {eventstats.length === 0 ? null :\n                    \n                    eventstats.map((item)=>{\n                   return   <tr key={item.event_id}>\n                      <th scope=\"row\">{item.event_name}</th>\n                    <td className='text-center'>{item.multi_tickers === 'true' ? '-' : item.price}</td>\n                    <td className='text-center'>{item.tickets_sold}</td>\n                    <td className='text-center'>{item.amount_earned}</td>\n                   \n                      <td>\n                        {item.status === 'active' ?\n                        <Button \n                        disabled={this.state.isloading}\n                        onClick={()=>this.changeTicketStatus(item.event_id,'inactive')}\n                        >\n                          Terminate\n                        </Button>  \n                        :\n                        <Button\n                        disabled={this.state.isloading}\n                        onClick={()=>this.changeTicketStatus(item.event_id,'active')}\n                        >\n                          Continue\n                        </Button>\n                      }\n\n                        <Button  disabled={this.state.isloading} onClick={()=>{\n                          this.setState({itemToEdit:item, modalopen:true})\n                        }}>Edit</Button>\n                      </td>\n                    </tr>\n                    })\n                    \n                    }\n                  \n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n          <EditSingleTicketEventModal\n            refreshdata={this.fetchStatistics}\n            item={this.state.itemToEdit}\n            open={this.state.modalopen}\n            close={this.setModal}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Connect\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      Jessica Jones\n                      <span className=\"font-weight-light\">, 27</span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Bucharest, Romania\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      University of Computer Science\n                    </div>\n                    <hr className=\"my-4\" />\n                    <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own\n                      music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"lucky.jesse\"\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"jesse@example.com\"\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Lucky\"\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Jesse\"\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"New York\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"United States\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign up with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Name\" type=\"text\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"/>\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div>\n                <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row>\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\">\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"/>\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"button\">\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Create new account</small>\n              </a>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip742438047\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip742438047\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip941738690\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip941738690\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip804044742\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip804044742\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip996637554\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip996637554\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip746418347\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip746418347\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip102182364\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip102182364\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip406489510\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip406489510\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip476840018\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip476840018\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip753056318\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip753056318\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip441753266\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip441753266\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188462246\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188462246\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip621168444\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip621168444\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip875258217\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip875258217\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip834416663\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip834416663\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip372449339\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip372449339\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip108714769\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip108714769\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip664029969\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip664029969\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip806693074\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip806693074\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip844096937\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip844096937\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip757459971\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip757459971\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                <CardFooter className=\"py-4\">\n                  <nav aria-label=\"...\">\n                    <Pagination\n                      className=\"pagination justify-content-end mb-0\"\n                      listClassName=\"justify-content-end mb-0\"\n                    >\n                      <PaginationItem className=\"disabled\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                          tabIndex=\"-1\"\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                          <span className=\"sr-only\">Previous</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className=\"active\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          2 <span className=\"sr-only\">(current)</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-angle-right\" />\n                          <span className=\"sr-only\">Next</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </nav>\n                </CardFooter>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip731399078\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip731399078\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip491083084\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip491083084\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip528540780\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip528540780\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip237898869\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip237898869\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188614932\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188614932\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip66535734\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip66535734\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip427561578\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip427561578\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip904098289\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip904098289\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip707904950\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip707904950\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip353988222\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip353988222\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip467171202\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip467171202\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip362118155\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362118155\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip226319315\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip226319315\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip711961370\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip711961370\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip216246707\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip216246707\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip638048561\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip638048561\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip781594051\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip781594051\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip840372212\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip840372212\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip497647175\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip497647175\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip951447946\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip951447946\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","\nimport React from \"react\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\n\nclass PageHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              \n           </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PageHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","const getevents = async()=>{\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      \n  return    fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/getEventlist.php\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n            return result\n        })\n        .catch(error => console.log('error', error));\n}\nconst getTicketEvents = async()=>{\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      \n  return    fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/getTicketEvents.php\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n            return result\n        })\n        .catch(error => console.log('error', error));\n}\n\nexport {getevents,getTicketEvents}","const createTicketCategory = async(event_id,categories)=>{\n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\n//var raw = JSON.stringify({\"event_id\":\"MBE-3325\",\"categories\":[{\"name\":\"cat 1\",\"price\":49},{\"name\":\"cat 2\",\"price\":439},{\"name\":\"cat 3\",\"price\":349}]});\nvar raw = JSON.stringify(\n    {\"event_id\":event_id,\n    \"categories\": categories});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nreturn fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/createTicketCategory.php\", requestOptions)\n  .then(response => response.json())\n  .then(result => {\n      console.log(result)\n      return result\n  })\n  .catch(error => console.log('error', error));\n}\nconst updateTicketCategory = async (catId,name,price,soldout) => {\n  var formdata = new FormData();\n  formdata.append(\"id\", catId);\n  formdata.append(\"new_name\", name);\n  formdata.append(\"new_price\", price);\n  formdata.append(\"sold_out\", soldout);\n\n  var requestOptions = {\n    method: \"POST\",\n    body: formdata,\n    redirect: \"follow\",\n  };\n\n return fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/editTicketCategory.php\", requestOptions)\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      return result;\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });\n};\nexport {createTicketCategory,updateTicketCategory}","import React, { useState } from 'react'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Input, Label } from 'reactstrap'\nimport {updateTicketCategory} from '../../api calls/addticketcategory'\nimport Loading from '../Loaders/Loading'\nimport swal from 'sweetalert';\n\nexport default function EditTicketCategoryModal(props) {\n    const [name,setName] = useState('')\n    const [price,setPrice] = useState('')\n    const [isSoldOut , setSoldOut] = useState('')\n    const [isloading,setLoading] = useState(false)\n    const submitData = async()=>{\n        let cat_name = name === '' ? props.item.category_name : name\n        let cat_price = price === '' ? props.item.price : price\n        let sold_out = isSoldOut === '' ? props.item.is_sold_out : isSoldOut\n        if(cat_price <= 0){\n        \n            swal('please enter a valid price','','error')\n            return\n        }\n        setLoading(true)\n        var res = await updateTicketCategory(props.item.category_id,cat_name,cat_price,sold_out)\n        if(res.resp_code === 200) {\n            console.log(res.message)\n            props.refreshdata()\n            props.close(false)\n            swal(res.message,'','success')\n        }else{\n           \n            swal(res.message,'','error')\n        }\n        setLoading(false)\n        console.log(cat_name,cat_price,sold_out)\n    }\n    return (\n       <Modal isOpen={props.open}>\n           <ModalHeader>Edit <hr/>\n            <Loading loading={isloading}/>\n           </ModalHeader>\n           <ModalBody>\n              <Form>\n                  <FormGroup>\n                      <Label for='name'>Name</Label>\n                      <Input value={props.item.category_name} onChange={ (e)=>setName(e.target.value)}  type='text' name='name'/>\n\n                  </FormGroup>\n                  <FormGroup>\n                      <Label>Price</Label>\n                      <Input value={price === '' ? parseFloat(props.item.price) : price     } onChange={(e)=>setPrice(e.target.value)} type='number'/>\n                      \n                  </FormGroup>\n                  <FormGroup>\n                      <Label>Sold Out?</Label>\n                      <Input value={isSoldOut === '' ? props.item.is_sold_out : isSoldOut} onChange={(e)=>setSoldOut(e.target.value)} type='select'>\n                          <option value='true'>Yes</option>\n                          <option value='false'>No</option>\n                      </Input>\n                  </FormGroup>\n              </Form>\n           </ModalBody>\n           <ModalFooter>\n               <Button onClick={()=>props.close(false)}>Close</Button>\n               <Button disabled={isloading} onClick={()=>submitData()}>Save</Button>\n           </ModalFooter>\n       </Modal>\n    )\n}\n","export const verifyTicket = async (id)=>{\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      \n  return    fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/checkticketstatus.php?id=\"+id, requestOptions)\n        .then(response => response.json())\n        .then(result => result)\n        .catch((error) => {\n            console.log(\"error\", error);\n            return { resp_code: 500, message: error };\n          });}\n\nexport const getTransactions = (id)=>{\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  \n return fetch(\"http://admin.mediabillo.net/tdb/dashboardbackend/api/gettransactions.php?id=\"+id, requestOptions)\n    .then(response => response.json())\n    .then(result => result)\n    .catch((error) => {\n      console.log(\"error\", error);\n      return { resp_code: 500, message: error };\n    });}\nexport const fetchTicketEvents = async()=>{\n      var requestOptions = {\n          method: 'GET',\n          redirect: 'follow'\n        };\n        \n        return fetch(\"http://admin.mediabillo.net/tdb/api/ticketevents.php\", requestOptions)\n          .then(response => response.json())\n          .then(result =>{ console.log(result)\n          return result\n          })\n          .catch(error => {console.log('error', error)\n              return {resp_code:500,message:error}\n      });\n  }","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport AddTicketEvent from \"./views/AddTicketEvent\";\nimport AddTicketCategory from \"./views/AddTicketCategory\";\nimport TicketSummary from \"./views/TicketSummary\";\nimport VerifyTicket from \"./views/VerifyTicket\";\nimport TicketTransactions from \"./views/TicketTransactions\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/newticketevent\",\n    name: \"Add Ticket Event\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: AddTicketEvent,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/newticketcategory\",\n    name: \"Add Ticket Category\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: AddTicketCategory,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/ticketsummary\",\n    name: \"Tickets Summary\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component:TicketSummary,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/ticketverification\",\n    name: \"Verify Ticket\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component:VerifyTicket,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/tickettransactions\",\n    name: \"Ticket Transactions\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component:TicketTransactions,\n    layout: \"/admin\"\n  },\n\n\n\n\n\n\n\n\n\n\n\n\n\n /* \n  {\n    path: \"/icons\",\n    name: \"Icons\",\n    icon: \"ni ni-planet text-blue\",\n    component: Icons,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  }  */\n];\nexport default routes;\n","import React, { useState, useEffect } from 'react';\nimport {\n    Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup,\n\n    Input, Label, Row\n} from 'reactstrap';\nimport PageHeader from '../components/Headers/PageHeader';\nimport { getevents } from '../api calls/getevents';\nimport { createTicketEvent } from '../api calls/addticketevent';\nimport Loading from '../components/Loaders/Loading';\nimport swal from 'sweetalert'  \n\nexport default function AddTicketEvent() {\n    const [eventlist,setEventList] = useState([])\n    const [selectedEvent,setSelectedEvent] = useState('')\n    const [mutliTicket,setMultiTiket] = useState('none')\n    const [price,setPrice] = useState(0)\n    const [isloading,setLoading] = useState(false)\n    const fetchEvents = async ()=>{\n        setLoading(true)\n        var res = await getevents()\n        setEventList(res.message)\n        setLoading(false)\n    }\n    useEffect(()=>{\n        fetchEvents()\n    },[])\n    const submitData = async ()=>{\n        if(selectedEvent === ''){\n            console.log('Please select an event')\n            swal('Please select an event','','error')\n            return\n        }\n        if(mutliTicket === 'none'){\n            console.log('Please choose ticket type')\n            swal('Please choose ticket type','','error')\n            return\n        }\n        if(mutliTicket === 'false' && price <= 0) {\n            console.log('please enter a valid ticket price')\n            swal('please enter a valid ticket price','','error')\n            return\n        }\n        if(mutliTicket === 'true') {\n           setPrice(0)\n        }\n        setLoading(true)\n        var res = await createTicketEvent(selectedEvent,mutliTicket,price)\n        if(res.resp_code === 200){\n            swal('success',res.message,'success')\n        }\n        else{\n            swal('error',res.message,'error')\n        }\n        setLoading(false)\n        console.log('submit data')\n    }\n    return (\n       <>\n       <PageHeader/>\n\n       <Container className='mt--7' fluid>\n       <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\"  >\n                <Card className='shadow'>\n                  <CardHeader>\n                  <h3 className=\"mb-0\">Add ticketing event</h3>\n                  <Loading loading={isloading}/>\n                  </CardHeader>\n\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <Form role=\"form\">\n                <FormGroup className='mb-3'>\n                    <Label for='eventlist'>Choose Event</Label>\n                    <Input value={selectedEvent}  onChange={(e)=>setSelectedEvent(e.target.value)}  className=\"input-group-alternative\" type='select' name='select' id='eventlist'>\n                  <option value=''>Choose</option>\n                  {\n                      eventlist.length === 0 ? null :\n                      eventlist.map((item)=>{\n                      return <option value={item.event_name} key={item.id}>{item.event_name}</option>\n                      })\n                  }\n                \n                    </Input>\n                </FormGroup>\n\n                <FormGroup className=\"mb-3\">\n                 \n                   \n                    <Label for='multi'>Will it have different type of tickets?</Label>\n                    <Input value={mutliTicket} onChange={(e)=>setMultiTiket(e.target.value)} className=\"input-group-alternative\" type='select' name='selects' id='multi'>\n                    <option value='none'>choose</option>\n                    <option value='true'>Yes</option>\n                    <option value='false'>No</option>\n                   \n                    </Input>              \n                      \n                </FormGroup>\n                {\n                    mutliTicket === 'true' |  mutliTicket ==='none' ? null : \n                    <FormGroup className=\"mb-3\">\n                    <Label for='multi'>Price of ticket</Label>\n                      <Input   className=\"input-group-alternative\" type='number' name='selects' id='multi' value={price} onChange={(e)=>setPrice(e.target.value)}>       \n                      </Input>               \n                  </FormGroup>\n                }\n            \n              \n                <div className=\"text-center\">\n                  <Button disabled={isloading} className=\"my-4\" color=\"primary\" type=\"button\" onClick={()=>submitData()}>\n                  Submit\n                  </Button>\n                </div>\n              </Form>\n                  </CardBody>\n                </Card>\n               </Col>\n           </Row>\n       </Container>\n       </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup,\n    Input, Label, Row, InputGroup, InputGroupAddon, InputGroupText\n} from 'reactstrap';\nimport PageHeader from '../components/Headers/PageHeader';\nimport { getTicketEvents } from '../api calls/getevents';\nimport { createTicketCategory } from '../api calls/addticketcategory';\nimport Loading from '../components/Loaders/Loading';\nimport swal from 'sweetalert';\n  \n\nexport default function AddTicketCategory() {\n\n    const [name,setName] = useState(\"\")\n    const [eventList,setEventList] = useState([])\n    const [selectedEvent,setSelectedEvent] = useState('none')\n    const [categories,setCategories] = useState([])\n    const [isloading,setLoading] = useState(false)\n    const fetchEvents = async ()=>{\n      setLoading(true)\n      var res = await getTicketEvents()\n      setEventList(res.message)\n      setLoading(false)\n    }\n    useEffect(()=>{\n      fetchEvents()\n    },[])\n    const addNameWithPrice = ()=>{\n       let name_t = name.trim()\n        var colonRegExp =/[A-Z]\\s*:{1}\\s*[0-9]+$/g\n        var colonIndex = name_t.indexOf(':')\n        var colonCount = (name_t.match(/:/g) || []).length;\n        var price= name_t.slice(colonIndex+1)\n        var cat_name = name_t.slice(0,colonIndex)\n\n      /*   console.log('colon count',colonCount)\n        console.log('rexexp res ',colonRegExp.test(name_t))\n        console.log('price is ',name_t.slice(colonIndex))\n        console.log('category name is ',name_t.slice(0,colonIndex)) */\n        if (cat_name.length === 0 || price <= 0 || colonCount === 0){\n\n          swal('enter valid name and amount','','error')\n          return \n        }\n        setCategories(categories.concat([\n            {name:cat_name,'price':price}\n        ]))\n      \n    }\n    const removeFromList = async name => {\n        let data  = categories.filter( item => item.name !== name)\n         await setCategories(data)\n      }\n    const submitData = async ()=>{\n      if (selectedEvent === 'none') {\n        console.log('please choose and event')\n        swal('please choose and event','','warning')\n        return\n      }\n      if (categories.length === 0) {\n        console.log('please provide at least one category')\n        swal('please provide at least one category','','warning')\n        return\n      }\n      setLoading(true)\n      var res = await createTicketCategory(selectedEvent,categories)\n      if (res.resp_code === 200){\n        swal('Success',res.message,'success')\n      }else{\n        swal('Error',res.message,'error')\n      }\n      setLoading(false)\n    }\n    return (\n       <>\n       <PageHeader/>\n\n       <Container className='mt--7' fluid>\n       <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\"  >\n                <Card className='shadow'>\n                  <CardHeader>\n                  <h3 className=\"mb-0\">Add Ticket Category</h3>\n                  \n                  <Loading loading={isloading}/>\n                  </CardHeader>\n\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <Form role=\"form\">\n                <FormGroup className='mb-3'>\n                    <Label for='eventlist'>Choose Event</Label>\n                    <Input value={selectedEvent} onChange={(e)=>setSelectedEvent(e.target.value)}  className=\"input-group-alternative\" type='select' name='select' id='eventlist'>\n                    <option value='none'>choose</option>\n                  {eventList.length === 0 ? null :\n                  eventList.map((item)=>{\n                  return <option key={item.event_id} value={item.event_id}>{item.event_name}</option>\n                  })\n                  }\n                 \n                    </Input>\n                </FormGroup>\n            \n               <FormGroup className=\"mb-3\">\n                 \n               <Label for='multi'>Category</Label> \n                   <InputGroup className=\"input-group-alternative\">\n                  \n         \n                 <Input  className=\"input-group-alternative\" value={name} onChange={(e)=>setName(e.target.value.toUpperCase())} placeholder='eg: REGULAR:50' type='text' name='selects' id='multi'/>\n                 <InputGroupAddon addonType='append'>\n                   <InputGroupText>\n                   <Button \n                   onClick={()=>addNameWithPrice()}\n                   color=\"primary\" type=\"button\">\n                 +\n                  </Button>   \n                   </InputGroupText>\n                   \n                   </InputGroupAddon>\n                   </InputGroup>\n               \n                    </FormGroup>\n\n                <FormGroup>\n                    {\n                        categories.length === 0 ? null :\n                        categories.map((item,index) => {\n                            return   <InputGroup key={item.name} className='mb-3' >\n                            <Input  className=\"input-group-alternative\" value={`${item.name} @ GHC${item.price}`} disabled name='selects' id='multi'/>\n        \n                            <InputGroupAddon addonType='append'>\n                           <InputGroupText onClick={()=>removeFromList(item.name)}>\n                         X\n                           </InputGroupText>\n                           \n                           </InputGroupAddon>\n                            </InputGroup >\n                        })\n                    }\n                  \n\n               \n\n                </FormGroup>\n                    <div className=\"text-center\">\n                  <Button disabled={isloading} className=\"my-4\" color=\"primary\" type=\"button\" onClick={()=>submitData()}>\n                    Submit\n                  </Button>\n                </div>\n              </Form>\n                  </CardBody>\n                </Card>\n               </Col>\n              \n             \n           </Row>\n       </Container>\n       </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button, Card, CardHeader, Col, Container,\n  Row, Table\n} from 'reactstrap';\nimport { fetchCategoryStats } from '../api calls/homestats';\nimport PageHeader from '../components/Headers/PageHeader';\nimport EditTicketCategoryModal from '../components/Modals/EditTicketCategoryModal';\n  \n\nexport default function TicketSummary() {\n\n    const [name,setName] = useState(\"AMA : 50 \")\n    const [events,setEvents] = useState([])\n    const [modalopen,setModal] = useState(false)\n    const [selectedCategory,setSelectedCategory] = useState({})\n    const fetchData = async ()=>{\n      var res = await fetchCategoryStats()\n      if(res.resp_code === 200){\n        setEvents(res.message)\n      } else{\n        alert(res.message)\n      }\n    }\n    useEffect(()=>{\n      fetchData()\n    },[])\n    return (\n       <>\n       <PageHeader/>\n\n       <Container className='mt--7' fluid>\n     {/*   <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\"  >\n                <Card className='shadow'>\n                  <CardHeader>\n                  <h3 className=\"mb-0\">Summary</h3>\n                  </CardHeader>\n\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <Form role=\"form\">\n                <FormGroup className='mb-3'>\n                    <Label for='eventlist'>Choose Event</Label>\n                    <Input  className=\"input-group-alternative\" type='select' name='select' id='eventlist'>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    </Input>\n                </FormGroup>\n            \n              </Form>\n                  </CardBody>\n                </Card>\n               </Col>\n              \n             \n           </Row> */}\n\n           {\n             events.length === 0 ? null :\n\n     events.map((event)=>{\n       return   <Row className=\"mt-5\" key={event.event_name}>\n       <Col className=\"mb-5 mb-xl-0 col-xl-12\"  >\n         <Card className=\"shadow\">\n           <CardHeader className=\"border-0\">\n             <Row className=\"align-items-center\">\n               <div className=\"col\">\n     <h3 className=\"mb-0\">{event.event_name}</h3>\n               </div>\n           \n             </Row>\n           </CardHeader>\n           <Table className=\"align-items-center table-flush\" responsive>\n             <thead className=\"thead-light\">\n               <tr>\n                 <th scope=\"col\">ID</th>\n                 <th scope=\"col\">Name</th>\n                 <th scope=\"col\">Price Per Ticket</th>\n                 <th scope=\"col\">Tickets Sold</th>\n                 <th scope=\"col\">Total Cash</th>\n                 <th scope=\"col\">Action</th>\n               </tr>\n             </thead>\n             <tbody>\n               {\n                 event.categories.length === 0 ? null :\n                 event.categories.map((category,index)=>{\n                   return <tr key={category.category_id}>\n                   <th scope=\"row\">{index+1}</th>\n                 <td>{category.category_name}</td>\n                 <td>{category.price}</td>\n                 <td>{category.tickets_sold}</td>\n                  \n                   <td>\n                     {(category.price * category.tickets_sold).toFixed(2)}\n                   </td>\n                   <td>\n                       {/* <Button>Delete</Button> */}\n                       <Button onClick={()=>{\n                         setSelectedCategory(category)\n                         setModal(true)\n                         \n                         }}>Edit</Button>\n                       </td>\n                 </tr>\n                 })\n               }\n             \n            \n              \n             </tbody>\n           </Table>\n         </Card>\n       </Col>\n      \n     </Row>\n     }) \n   \n           }\n        \n       <EditTicketCategoryModal refreshdata={fetchData}  item={selectedCategory} open={modalopen} close={setModal} />\n       </Container>\n       </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n    Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup,\n    Input, Label, Row, InputGroup, InputGroupAddon, InputGroupText\n} from 'reactstrap';\nimport PageHeader from '../components/Headers/PageHeader';\nimport { getTicketEvents } from '../api calls/getevents';\nimport { createTicketCategory } from '../api calls/addticketcategory';\nimport { verifyTicket } from '../api calls/verifyticket';\nimport Loading from '../components/Loaders/Loading';\nimport swal from 'sweetalert'\n\nexport default function VerifyTicket() {\n\n    const [ticketid,setTicketId] = useState(\"\")\n    const [isloading,setLoading] = useState(false)\n  \n    const submitData = async ()=>{\n      setLoading(true)\n\n      var res = await verifyTicket(`BILO${ticketid}T`)\n      if(res.resp_code === 200){\n          //console.log(res.message)\n          swal('verification sucessfull',res.message.event_name,'success')\n      }else{\n          \n          swal('verification failed',res.message,'error')\n      }\n      setLoading(false)\n    }\n    return (\n       <>\n       <PageHeader/>\n\n       <Container className='mt--7' fluid>\n       <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\"  >\n                <Card className='shadow'>\n                  <CardHeader>\n                  <h3 className=\"mb-0\">TICKET VERIFICATION</h3>\n                  <Loading loading={isloading} />\n                  </CardHeader>\n\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                  <Form role=\"form\">\n            \n               <FormGroup className=\"mb-3\">\n                 \n               <Label for='multi'>Ticket ID</Label> \n                   <InputGroup className=\"input-group-alternative\">\n                  \n         \n                 <Input  className=\"input-group-alternative\" value={ticketid} onChange={(e)=>setTicketId(e.target.value)} placeholder='eg: 543244' type='text' name='selects' id='multi'/>\n              \n                   </InputGroup>\n               \n                    </FormGroup>\n\n            \n                    <div className=\"text-center\">\n                  <Button \n                  disabled={isloading}\n                  className=\"my-4\" color=\"primary\" type=\"button\" onClick={()=>submitData()}>\n                    Submit\n                  </Button>\n                </div>\n              </Form>\n                  </CardBody>\n                </Card>\n               </Col>\n              \n             \n           </Row>\n       </Container>\n       </>\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport PageHeader from '../components/Headers/PageHeader'\nimport { getevents } from '../api calls/getevents';\nimport Loading from '../components/Loaders/Loading';\nimport swal from 'sweetalert'  \nimport { Container, Row, Col, Card, CardHeader, CardBody,Form, FormGroup,\nBadge,\n    Input, Label, Table, } from 'reactstrap'\nimport { getTransactions, fetchTicketEvents } from '../api calls/verifyticket';\n\nexport default function TicketTransactions() {\n    const [eventlist,setEventList] = useState([])\n    const [selectedEvent,setSelectedEvent] = useState('')\n    const [isloading,setLoading] = useState(false)\n    const [transactions,setTransactions] = useState([])\n    const fetchEvents = async ()=>{\n        setLoading(true)\n        var res = await fetchTicketEvents()\n       setEventList(res.message)\n        setLoading(false)\n    }\n    const handleEventChange = async (eventid)=>{\n        setLoading(true)\n        setSelectedEvent(eventid)\n        var res = await getTransactions(eventid)\n        if(res.resp_code === 200){\n            setTransactions(res.message)\n        }else{\n            swal('error',res.message,'error')\n        }\n        setLoading(false)\n    }\n    useEffect(()=>{\n        fetchEvents()\n    },[])\n    return (\n        <>\n        <PageHeader/>\n        <Container className='mt--7' fluid>\n            <Row>\n                <Col>\n                    <Card>\n                       {/*  <CardHeader>\n                            Transaction Status\n                        </CardHeader> */}\n                        <CardBody>\n                        <Form role=\"form\">\n                <FormGroup className='mb-3'>\n                    <Label for='eventlist'>Choose Event</Label>\n                    <Input value={selectedEvent}  onChange={(e)=>handleEventChange(e.target.value)}  className=\"input-group-alternative\" type='select' name='select' id='eventlist'>\n                  <option value=''>Choose</option>\n                  {\n                      eventlist.length === 0 ? null :\n                      eventlist.map((item)=>{\n                      return <option value={item.event_id} key={item.id}>{item.event_name}</option>\n                      })\n                  }\n                \n                    </Input>\n                </FormGroup>\n                </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0 col-xl-12\">\n             \n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                <Loading loading={isloading}/>\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Transactions</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      {/* <th scope=\"col\">ID</th> */}\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\" >Ticket ID</th>\n    \n                      <th scope=\"col\">Category</th>\n                      <th scope=\"col\">Amount</th>\n\n                      <th scope=\"col\">Payment Staus</th>\n                      <th scope=\"col\">Phone</th>\n                     \n                    </tr>\n                  </thead>\n                  <tbody>\n                   \n                    {transactions.length === 0 ? null :\n                    \n                    transactions.map((item)=>{\n                   return   <tr key={item.ticket_id}>\n                      <th scope=\"row\">{item.trans_date}</th>\n                      <td scope=\"row\">{item.ticket_id}</td>\n                    <td className='text-center'>{item.cat_name}</td>\n                    <td className='text-center'>{item.price}</td>\n\n                    <td className='text-center' >{item.payment_status === 'completed' ?\n                  <Badge color=\"\" className=\"badge-dot mr-4\">\n                  <i className=\"bg-success\" />\n                 {item.payment_status }\n                </Badge>\n                \n                :  <Badge color=\"\" className=\"badge-dot mr-4\">\n                <i className=\"bg-warning\" />\n               {item.payment_status }\n              </Badge>\n                }</td>\n                    <td className='text-center'>{item.phonenumber}</td>\n                   \n                    \n                    </tr>\n                    })\n                    \n                    }\n                  \n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n        </>\n    )\n}\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/billologo.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/argon-react-white.png\")} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/argon-react.png\")}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Register</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profile</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}